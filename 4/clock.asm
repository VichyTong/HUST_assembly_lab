.386
STACK SEGMENT USE16 STACK
         DB 200 DUP(0)
STACK ENDS

CODE SEGMENT USE16

ASSUME CS:CODE, DS:CODE,SS:STACK
COUNT DB 18
HOUR DB ?,?,':'
MIN DB ?,?,':'
SEC DB ?,?
BUF_LEN=$-HOUR
CURSOR DW ?
OLD_INT DW ?,?



NEW08H PROC FAR
    PUSHF
	CALL DWORD PTR CS:OLD_INT
	DEC CS:COUNT
	JZ DISP
	IRET
DISP: MOV CS:COUNT,18
    STI
	PUSHA
	PUSH DS
	PUSH ES
	MOV AX,CS
	MOV DS,AX
	MOV ES,AX
	CALL GET_TIME
	MOV BH,0
	MOV AH,3
	INT 10H
	MOV CURSOR,DX
	MOV BP,OFFSET HOUR
	MOV BH,0
	MOV DH,0
	MOV DL,80-BUF_LEN
	MOV BL,07H
	MOV CX,BUF_LEN
	MOV AL,0
	MOV AH,13H
	INT 10H
	MOV BH,0
	MOV DX,CURSOR
	MOV AH,2
	INT 10H
	POP ES
	POP DS
	POPA
	IRET
NEW08H ENDP

GET_TIME PROC
     MOV AL,4
	 OUT 70H,AL
     JMP $+2
     IN  AL,71H
	 MOV AH,AL
	 AND AL,0FH
	 SHR AH,4
	 ADD AX,3030H
	 XCHG AH,AL
	 MOV WORD PTR HOUR ,AX
	 
	 MOV AL,2
	 OUT 70H,AL
	 JMP $+2
	 IN AL,71H
	 MOV AH,AL
	 AND AL,0FH
	 SHR AH,4
	 ADD AX,3030H
	 XCHG AH,AL
	 MOV WORD PTR MIN,AX
	 MOV AL,0
	 OUT 70H,AL
	 JMP $+2
	 IN AL,71H
	 MOV AH,AL 
	 AND AL,0FH
	 SHR AH,4
	 ADD AX,3030H
	 XCHG AH,AL
	 MOV WORD PTR SEC,AX
     RET
GET_TIME ENDP
BEGIN:
    	PUSH CS
	POP DS
	;CALL NEW08H
	;检查是否已经安装
	MOV AX,3508H
	INT 21H
	CMP	BX,OFFSET NEW08H
	JZ	SKIP_INSTALL
	
	
	MOV OLD_INT,BX ;保存原来处理地址
	MOV OLD_INT+2,ES
	
	;修改中断矢量表
	MOV DX,OFFSET NEW08H
	MOV AX,2508H
	INT 21H
	

MOV AL,0
MOV AH,31H
MOV	DX,offset BEGIN
SHR DX,4
ADD DX,30H

INT 21H
JMP THE_END

SKIP_INSTALL:
	MOV	AH,4CH				;返回DOS
	INT	21H
	
THE_END:
	MOV	AH,4CH				;返回DOS
	INT	21H

CODE ENDS

END BEGIN






; mount c d:\masm60




